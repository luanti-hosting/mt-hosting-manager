version: "3.6"

services:
 hosting_webapp:
  image: node:19.2.0-alpine3.15
  volumes:
   - "./:/app"
  working_dir: /app/public
  command: ["npm", "ci"]

 postgres:
  image: postgres:16.1
  restart: always
  environment:
   POSTGRES_PASSWORD: enter
  volumes:
   - "postgres:/var/lib/postgresql/data"
  command:
   - "postgres"
   - "-c"
   - "log_statement=all"

 hosting:
  image: golang:1.21.5
  stop_grace_period: 1m
  volumes:
   - ".:/data"
   - "go_dir:/go"
   - "go_cache:/.cache"
  environment:
   - PGUSER=postgres
   - PGPASSWORD=enter
   - PGHOST=postgres
   - PGDATABASE=postgres
   - PGPORT=5432
   - LOGLEVEL=debug
   - BASEURL=http://localhost:8080
   - COOKIE_PATH=/
   - COOKIE_SECURE=false
   - LOG_STREAM_KEY=my-stream-key
   - LOG_STREAM_DIR=/data/logs
   - WEBDEV=true
   - ENABLE_WORKER=true
   - INITIAL_BALANCE=2000
  env_file:
   - .env
  depends_on:
   - postgres
  ports:
   - "8080:8080"
  working_dir: /data
  command: ["go", "run", "."]

 integration-test:
  image: golang:1.21.5
  depends_on:
   - postgres
  volumes:
   - ".:/data"
   - "go_dir:/go"
   - "go_cache:/.cache"
  environment:
   - PGUSER=postgres
   - PGPASSWORD=enter
   - PGHOST=postgres
   - PGDATABASE=postgres
   - PGPORT=5432
   - LOGLEVEL=debug
  working_dir: /data
  command: ["go", "test", "./...", "-p", "1", "-cover"]

volumes:
  go_dir: {}
  go_cache: {}
  postgres: {}
